name: Build and Push Docker Image

on:
  push:
    branches: [build]

jobs:
  test:
    name: Testing Go application
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: /go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.mod') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - uses: actions/setup-go@v4
        with:
          go-version: "1.25"
      - run: go test ./...

  build:
    name: Build and Push Docker
    runs-on: self-hosted
    needs: test
    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: xomrkob/web-server-gin
          tags: |
            type=raw,value=latest
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=${{ github.sha }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  update-image:
    name: Update image in kubernetes pod
    runs-on: self-hosted
    needs: build
    if: success()

    steps:
      - name: Update Kubernetes Deployment
        run: |
          kubectl -n go-app set image deployment/web-server-gin web-server-gin=xomrkob/web-server-gin:${{ github.sha }}
  notify:
    name: Telegram Notification
    runs-on: self-hosted
    needs: [test, build]
    if: always()

    steps:
      - name: Send status to Telegram
        uses: appleboy/telegram-action@v1.0.0
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            🔔 ${{ github.workflow }} - ${{ job.status }}
            📦 ${{ github.repository }}
            🌿 ${{ github.ref_name }}
            👤 ${{ github.actor }}
            ✅ Test: ${{ needs.test.result }}
            🐳 Build: ${{ needs.build.result }}
            🔗 ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
